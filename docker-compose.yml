version: "3"
services:
  postgres:
    build:
      context: .
      dockerfile: "./docker/postgres/Dockerfile"
    environment:
      - POSTGRES_DB=databoard_fmcg
      - POSTGRES_USER=databoard_fmcg
      - POSTGRES_PASSWORD=databoard_fmcg
    networks:
      backend:
        ipv4_address: 10.90.1.2
    ports:
      - "5432:5432"
  redis:
    build:
      context: .
      dockerfile: "./docker/redis/Dockerfile"
    networks:
      backend:
        ipv4_address: 10.90.1.3
    ports:
      - "6379:6379"
  rabbitmq:
    build:
      context: .
      dockerfile: "./docker/rabbitmq/Dockerfile"
    networks:
      backend:
        ipv4_address: 10.90.1.4
    ports:
      - "5672:5672"
      - "15672:15672"
  es:
    build:
      context: .
      dockerfile: "./docker/es/Dockerfile"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      cluster.name: "es-cluster"
      network.host: "0.0.0.0"
      bootstrap.memory_lock: "true"
      discovery.type: "single-node"
      action.auto_create_index: "true"
    networks:
      backend:
        ipv4_address: 10.90.1.5
    ports:
      - "9200:9200"
      - "9300:9300"
  kibana:
    build:
      context: .
      dockerfile: "./docker/kibana/Dockerfile"
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://es:9200
    networks:
      backend:
        ipv4_address: 10.90.1.6
    ports:
      - "5601:5601"
    depends_on:
      - es
networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 10.90.1.0/16
